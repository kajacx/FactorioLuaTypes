---@class CustomInputEvent Called when a [CustomInput](https://wiki.factorio.com/Prototype/CustomInput) is activated.
---@field cursor_position Position The mouse cursor position when the custom input was activated.
---@field input_name string The prototype name of the custom input that was activated.
---@field name defines_events Identifier of the event
---@field player_index uint The player that activated the custom input.
---@field selected_prototype SelectedPrototypeData Information about the prototype that is selected when the custom input is used. `nil` if none is selected.
---@field tick uint Tick the event was generated.

---@class on_ai_command_completed Called when a unit/group completes a command.
---@field name defines_events Identifier of the event
---@field result defines_behavior_result
---@field tick uint Tick the event was generated.
---@field unit_number uint unit_number/group_number of the unit/group which just completed a command.
---@field was_distracted boolean Was this command generated by a distraction.

---@class on_area_cloned Called when an area of the map is cloned.
---@field clear_destination_decoratives boolean
---@field clear_destination_entities boolean
---@field clone_decoratives boolean
---@field clone_entities boolean
---@field clone_tiles boolean
---@field destination_area BoundingBox
---@field destination_force LuaForce
---@field destination_surface LuaSurface
---@field name defines_events Identifier of the event
---@field source_area BoundingBox
---@field source_surface LuaSurface
---@field tick uint Tick the event was generated.

---@class on_biter_base_built Called when a biter migration builds a base.
---@field entity LuaEntity The entity that was built.
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_brush_cloned Called when a set of positions on the map is cloned.
---@field clear_destination_decoratives boolean
---@field clear_destination_entities boolean
---@field clone_decoratives boolean
---@field clone_entities boolean
---@field clone_tiles boolean
---@field destination_force LuaForce
---@field destination_offset TilePosition
---@field destination_surface LuaSurface
---@field name defines_events Identifier of the event
---@field source_offset TilePosition
---@field source_positions TilePosition[]
---@field source_surface LuaSurface
---@field tick uint Tick the event was generated.

---@class on_build_base_arrived Called when a [defines.command.build_base](defines.command.build_base) command reaches its destination, and before building starts.
---@field group LuaUnitGroup The unit group the command was assigned to.
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.
---@field unit LuaEntity The unit the command was assigned to.

---@class on_built_entity Called when player builds something. Can be filtered using [LuaPlayerBuiltEntityEventFilter](LuaPlayerBuiltEntityEventFilter).
---@field created_entity LuaEntity
---@field item LuaItemPrototype The item prototype used to build the entity. Note this won't exist in some situations (built from blueprint, undo, etc).
---@field name defines_events Identifier of the event
---@field player_index uint
---@field stack LuaItemStack
---@field tags Tags The tags associated with this entity if any.
---@field tick uint Tick the event was generated.

---@class on_cancelled_deconstruction Called when the deconstruction of an entity is canceled. Can be filtered using [LuaEntityDeconstructionCancelledEventFilter](LuaEntityDeconstructionCancelledEventFilter).
---@field entity LuaEntity
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_cancelled_upgrade Called when the upgrade of an entity is canceled. Can be filtered using [LuaUpgradeCancelledEventFilter](LuaUpgradeCancelledEventFilter).
---@field entity LuaEntity
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_character_corpse_expired Called when a character corpse expires due to timeout or all of the items being removed from it.
---@field corpse LuaEntity The corpse.
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_chart_tag_added Called when a chart tag is created.
---@field force LuaForce
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tag LuaCustomChartTag
---@field tick uint Tick the event was generated.

---@class on_chart_tag_modified Called when a chart tag is modified by a player.
---@field force LuaForce
---@field name defines_events Identifier of the event
---@field old_icon SignalID
---@field old_player uint
---@field old_text string
---@field player_index uint
---@field tag LuaCustomChartTag
---@field tick uint Tick the event was generated.

---@class on_chart_tag_removed Called just before a chart tag is deleted.
---@field force LuaForce
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tag LuaCustomChartTag
---@field tick uint Tick the event was generated.

---@class on_chunk_charted Called when a chunk is charted or re-charted.
---@field area BoundingBox Area of the chunk.
---@field force LuaForce
---@field name defines_events Identifier of the event
---@field position ChunkPosition
---@field surface_index uint
---@field tick uint Tick the event was generated.

---@class on_chunk_deleted Called when one or more chunks are deleted using [LuaSurface::delete_chunk](LuaSurface::delete_chunk).
---@field name defines_events Identifier of the event
---@field positions ChunkPosition[] The chunks deleted.
---@field surface_index uint
---@field tick uint Tick the event was generated.

---@class on_chunk_generated Called when a chunk is generated.
---@field area BoundingBox Area of the chunk.
---@field name defines_events Identifier of the event
---@field position ChunkPosition Position of the chunk.
---@field surface LuaSurface The surface the chunk is on.
---@field tick uint Tick the event was generated.

---@class on_combat_robot_expired Called when a combat robot expires through a lack of energy, or timeout.
---@field name defines_events Identifier of the event
---@field owner LuaEntity The entity that owns the robot if any.
---@field robot LuaEntity
---@field tick uint Tick the event was generated.

---@class on_console_chat Called when a message is sent to the in-game console, either by a player or through the server interface.
---@field message string The chat message that was sent.
---@field name defines_events Identifier of the event
---@field player_index uint The player doing the chatting, if any.
---@field tick uint Tick the event was generated.

---@class on_console_command Called when someone enters a command-like message regardless of it being a valid command.
---@field command string The command as typed without the preceding forward slash ('/').
---@field name defines_events Identifier of the event
---@field parameters string The parameters provided if any.
---@field player_index uint The player if any.
---@field tick uint Tick the event was generated.

---@class on_cutscene_cancelled Called when a cutscene is cancelled by the player or by script.
---@field name defines_events Identifier of the event
---@field player_index uint The player the cutscene was shown to.
---@field tick uint Tick the event was generated.

---@class on_cutscene_waypoint_reached Called when a cutscene is playing, each time it reaches a waypoint in that cutscene. This refers to an index in the table previously passed to set_controller which started the cutscene.
---@field name defines_events Identifier of the event
---@field player_index uint The player index of the player viewing the cutscene.
---@field tick uint Tick the event was generated.
---@field waypoint_index uint The index of the waypoint we just completed.

---@class on_difficulty_settings_changed Called when the map difficulty settings are changed.
---@field name defines_events Identifier of the event
---@field old_recipe_difficulty uint
---@field old_technology_difficulty uint
---@field tick uint Tick the event was generated.

---@class on_entity_cloned Called when an entity is cloned. Can be filtered for the source entity using [LuaEntityClonedEventFilter](LuaEntityClonedEventFilter).
---@field destination LuaEntity
---@field name defines_events Identifier of the event
---@field source LuaEntity
---@field tick uint Tick the event was generated.

---@class on_entity_damaged Called when an entity is damaged. Can be filtered using [LuaEntityDamagedEventFilter](LuaEntityDamagedEventFilter).
---@field cause LuaEntity The entity that did the attacking if available.
---@field damage_type LuaDamagePrototype
---@field entity LuaEntity
---@field final_damage_amount float The damage amount after resistances.
---@field final_health float The health of the entity after the damage was applied.
---@field force LuaForce The force that did the attacking if any.
---@field name defines_events Identifier of the event
---@field original_damage_amount float The damage amount before resistances.
---@field tick uint Tick the event was generated.

---@class on_entity_destroyed Called after an entity is destroyed that has been registered with [LuaBootstrap::register_on_entity_destroyed](LuaBootstrap::register_on_entity_destroyed)
---@field name defines_events Identifier of the event
---@field registration_number uint64
---@field tick uint Tick the event was generated.
---@field unit_number uint

---@class on_entity_died Called when an entity dies. Can be filtered using [LuaEntityDiedEventFilter](LuaEntityDiedEventFilter).
---@field cause LuaEntity The entity that did the killing if available.
---@field damage_type LuaDamagePrototype The damage type if any.
---@field entity LuaEntity The entity that died.
---@field force LuaForce The force that did the killing if any.
---@field loot LuaInventory The loot generated by this entity if any.
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_entity_logistic_slot_changed Called when one of an entity's personal logistic slots changes.
---@field entity LuaEntity The entity for whom a logistic slot was changed.
---@field name defines_events Identifier of the event
---@field player_index uint The player who changed the slot, or `nil` if changed by script.
---@field slot_index uint The slot index that was changed.
---@field tick uint Tick the event was generated.

---@class on_entity_renamed Called after an entity has been renamed either by the player or through script.
---@field by_script boolean
---@field entity LuaEntity
---@field name defines_events Identifier of the event
---@field old_name string
---@field player_index uint If by_script is true this will not be included.
---@field tick uint Tick the event was generated.

---@class on_entity_settings_pasted Called after entity copy-paste is done.
---@field destination LuaEntity The destination entity settings were copied to.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field source LuaEntity The source entity settings were copied from.
---@field tick uint Tick the event was generated.

---@class on_entity_spawned Called when an entity is spawned by a EnemySpawner
---@field entity LuaEntity
---@field name defines_events Identifier of the event
---@field spawner LuaEntity
---@field tick uint Tick the event was generated.

---@class on_equipment_inserted Called after equipment is inserted into an equipment grid.
---@field equipment LuaEquipment The equipment inserted.
---@field grid LuaEquipmentGrid The equipment grid inserted into.
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_equipment_removed Called after equipment is removed from an equipment grid.
---@field count uint The count of equipment removed.
---@field equipment string The equipment removed.
---@field grid LuaEquipmentGrid The equipment grid removed from.
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_force_cease_fire_changed Called when the a forces cease fire values change.
---@field added boolean If the other force was added or removed.
---@field force LuaForce The force who's cease fire changed.
---@field name defines_events Identifier of the event
---@field other_force LuaForce Which force was added or removed.
---@field tick uint Tick the event was generated.

---@class on_force_created Called when a new force is created using `game.create_force()`
---@field force LuaForce The newly created force.
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_force_friends_changed Called when the a forces friends change.
---@field added boolean If the other force was added or removed.
---@field force LuaForce The force who's friends changed.
---@field name defines_events Identifier of the event
---@field other_force LuaForce Which force was added or removed.
---@field tick uint Tick the event was generated.

---@class on_force_reset Called when [LuaForce::reset](LuaForce::reset) is finished.
---@field force LuaForce
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_forces_merged Called after two forces have been merged using `game.merge_forces()`.
---@field destination LuaForce The force entities where reassigned to.
---@field name defines_events Identifier of the event
---@field source_index uint The index of the destroyed force.
---@field source_name string The force destroyed.
---@field tick uint Tick the event was generated.

---@class on_forces_merging Called when two forces are about to be merged using `game.merge_forces()`.
---@field destination LuaForce The force to reassign entities to.
---@field name defines_events Identifier of the event
---@field source LuaForce The force to be destroyed
---@field tick uint Tick the event was generated.

---@class on_game_created_from_scenario Called when a game is created from a scenario. This is fired for every mod, even when the scenario's save data already includes it. In those cases however, [LuaBootstrap::on_init](LuaBootstrap::on_init) is not fired.
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_gui_checked_state_changed Called when [LuaGuiElement](LuaGuiElement) checked state is changed (related to checkboxes and radio buttons).
---@field element LuaGuiElement The element whose checked state changed.
---@field name defines_events Identifier of the event
---@field player_index uint The player who did the change.
---@field tick uint Tick the event was generated.

---@class on_gui_click Called when [LuaGuiElement](LuaGuiElement) is clicked.
---@field alt boolean If alt was pressed.
---@field button defines_mouse_button_type The mouse button used if any.
---@field control boolean If control was pressed.
---@field element LuaGuiElement The clicked element.
---@field name defines_events Identifier of the event
---@field player_index uint The player who did the clicking.
---@field shift boolean If shift was pressed.
---@field tick uint Tick the event was generated.

---@class on_gui_closed Called when the player closes the GUI they have open.
---@field element LuaGuiElement The custom GUI element that was open
---@field entity LuaEntity The entity that was open
---@field equipment LuaEquipment The equipment that was open
---@field gui_type defines_gui_type The GUI type that was open.
---@field item LuaItemStack The item that was open
---@field name defines_events Identifier of the event
---@field other_player LuaPlayer The other player that was open
---@field player_index uint The player.
---@field technology LuaTechnology The technology that was automatically selected when opening the research GUI
---@field tick uint Tick the event was generated.
---@field tile_position TilePosition The tile position that was open

---@class on_gui_confirmed Called when a [LuaGuiElement](LuaGuiElement) is confirmed, for example by pressing Enter in a textfield.
---@field alt boolean If alt was pressed.
---@field control boolean If control was pressed.
---@field element LuaGuiElement The confirmed element.
---@field name defines_events Identifier of the event
---@field player_index uint The player who did the confirming.
---@field shift boolean If shift was pressed.
---@field tick uint Tick the event was generated.

---@class on_gui_elem_changed Called when [LuaGuiElement](LuaGuiElement) element value is changed (related to choose element buttons).
---@field element LuaGuiElement The element whose element value changed.
---@field name defines_events Identifier of the event
---@field player_index uint The player who did the change.
---@field tick uint Tick the event was generated.

---@class on_gui_location_changed Called when [LuaGuiElement](LuaGuiElement) element location is changed (related to frames in `player.gui.screen`).
---@field element LuaGuiElement The element whose location changed.
---@field name defines_events Identifier of the event
---@field player_index uint The player who did the change.
---@field tick uint Tick the event was generated.

---@class on_gui_opened Called when the player opens a GUI.
---@field element LuaGuiElement The custom GUI element that was opened
---@field entity LuaEntity The entity that was opened
---@field equipment LuaEquipment The equipment that was opened
---@field gui_type defines_gui_type The GUI type that was opened.
---@field item LuaItemStack The item that was opened
---@field name defines_events Identifier of the event
---@field other_player LuaPlayer The other player that was opened
---@field player_index uint The player.
---@field tick uint Tick the event was generated.

---@class on_gui_selected_tab_changed Called when [LuaGuiElement](LuaGuiElement) selected tab is changed (related to tabbed-panes).
---@field element LuaGuiElement The tabbed pane whose selected tab changed.
---@field name defines_events Identifier of the event
---@field player_index uint The player who did the change.
---@field tick uint Tick the event was generated.

---@class on_gui_selection_state_changed Called when [LuaGuiElement](LuaGuiElement) selection state is changed (related to drop-downs and listboxes).
---@field element LuaGuiElement The element whose selection state changed.
---@field name defines_events Identifier of the event
---@field player_index uint The player who did the change.
---@field tick uint Tick the event was generated.

---@class on_gui_switch_state_changed Called when [LuaGuiElement](LuaGuiElement) switch state is changed (related to switches).
---@field element LuaGuiElement The switch whose switch state changed.
---@field name defines_events Identifier of the event
---@field player_index uint The player who did the change.
---@field tick uint Tick the event was generated.

---@class on_gui_text_changed Called when [LuaGuiElement](LuaGuiElement) text is changed by the player.
---@field element LuaGuiElement The edited element.
---@field name defines_events Identifier of the event
---@field player_index uint The player who did the edit.
---@field text string The new text in the element.
---@field tick uint Tick the event was generated.

---@class on_gui_value_changed Called when [LuaGuiElement](LuaGuiElement) slider value is changed (related to the slider element).
---@field element LuaGuiElement The element whose value changed.
---@field name defines_events Identifier of the event
---@field player_index uint The player who did the change.
---@field tick uint Tick the event was generated.

---@class on_land_mine_armed Called when a land mine is armed.
---@field mine LuaEntity
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_lua_shortcut Called when a custom Lua shortcut is pressed.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field prototype_name string Shortcut prototype name of the shortcut that was clicked.
---@field tick uint Tick the event was generated.

---@class on_marked_for_deconstruction Called when an entity is marked for deconstruction with the Deconstruction planner or via script. Can be filtered using [LuaEntityMarkedForDeconstructionEventFilter](LuaEntityMarkedForDeconstructionEventFilter).
---@field entity LuaEntity
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_marked_for_upgrade Called when an entity is marked for upgrade with the Upgrade planner or via script. Can be filtered using [LuaEntityMarkedForUpgradeEventFilter](LuaEntityMarkedForUpgradeEventFilter).
---@field direction defines_direction The new direction (if any)
---@field entity LuaEntity
---@field name defines_events Identifier of the event
---@field player_index uint
---@field target LuaEntityPrototype
---@field tick uint Tick the event was generated.

---@class on_market_item_purchased Called after a player purchases some offer from a `market` entity.
---@field count uint The amount of offers purchased.
---@field market LuaEntity The market entity.
---@field name defines_events Identifier of the event
---@field offer_index uint The index of the offer purchased.
---@field player_index uint The player who did the purchasing.
---@field tick uint Tick the event was generated.

---@class on_mod_item_opened Called when the player uses the 'Open item GUI' control on an item defined with the 'mod-openable' flag
---@field item LuaItemPrototype The item clicked on.
---@field name defines_events Identifier of the event
---@field player_index uint The player.
---@field tick uint Tick the event was generated.

---@class on_permission_group_added Called directly after a permission group is added.
---@field group LuaPermissionGroup The group added.
---@field name defines_events Identifier of the event
---@field player_index uint The player that added the group.
---@field tick uint Tick the event was generated.

---@class on_permission_group_deleted Called directly after a permission group is deleted.
---@field group_name string The group that was deleted.
---@field id uint The group id that was deleted.
---@field name defines_events Identifier of the event
---@field player_index uint The player doing the deletion.
---@field tick uint Tick the event was generated.

---@class on_permission_group_edited Called directly after a permission group is edited in some way.
---@field action defines_input_action The action when the `type` is "add-permission" or "remove-permission".
---@field group LuaPermissionGroup The group being edited.
---@field name defines_events Identifier of the event
---@field new_name string The new group name when the `type` is "rename".
---@field old_name string The old group name when the `type` is "rename".
---@field other_player_index uint The other player when the `type` is "add-player" or "remove-player".
---@field player_index uint The player that did the editing.
---@field tick uint Tick the event was generated.
---@field type string The edit type: "add-permission", "remove-permission", "enable-all", "disable-all", "add-player", "remove-player", "rename".

---@class on_permission_string_imported Called directly after a permission string is imported.
---@field name defines_events Identifier of the event
---@field player_index uint The player that imported the string.
---@field tick uint Tick the event was generated.

---@class on_picked_up_item Called when a player picks up an item.
---@field item_stack SimpleItemStack
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_alt_selected_area Called after a player alt-selects an area with a selection-tool item.
---@field area BoundingBox The area selected.
---@field entities LuaEntity[] The entities selected.
---@field item string The item used to select the area.
---@field name defines_events Identifier of the event
---@field player_index uint The player doing the selection.
---@field surface LuaSurface The surface selected.
---@field tick uint Tick the event was generated.
---@field tiles LuaTile[] The tiles selected.

---@class on_player_ammo_inventory_changed Called after a players ammo inventory changed in some way.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_armor_inventory_changed Called after a players armor inventory changed in some way.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_banned Called when a player is banned.
---@field by_player uint The player that did the banning if any.
---@field name defines_events Identifier of the event
---@field player_index uint The player banned.
---@field player_name string The banned player name.
---@field reason string The reason given if any.
---@field tick uint Tick the event was generated.

---@class on_player_built_tile Called after a player builds tiles.
---@field item LuaItemPrototype The item type used to build the tiles
---@field name defines_events Identifier of the event
---@field player_index uint
---@field stack LuaItemStack The stack used to build the tiles (may be empty if all of the items where used to build the tiles).
---@field surface_index uint The surface the tile(s) were built on.
---@field tick uint Tick the event was generated.
---@field tile LuaTilePrototype The tile prototype that was placed.
---@field tiles OldTileAndPosition[] The position data.

---@class on_player_cancelled_crafting Called when a player cancels crafting.
---@field cancel_count uint The number of crafts that have been cancelled.
---@field items LuaInventory The crafting items returned to the player's inventory.
---@field name defines_events Identifier of the event
---@field player_index uint The player that did the crafting.
---@field recipe LuaRecipe The recipe that has been cancelled.
---@field tick uint Tick the event was generated.

---@class on_player_changed_force Called after a player changes forces.
---@field force LuaForce The old force.
---@field name defines_events Identifier of the event
---@field player_index uint The player who changed forces.
---@field tick uint Tick the event was generated.

---@class on_player_changed_position Called when the tile position a player is located at changes.
---@field name defines_events Identifier of the event
---@field player_index uint The player.
---@field tick uint Tick the event was generated.

---@class on_player_changed_surface Called after a player changes surfaces.
---@field name defines_events Identifier of the event
---@field player_index uint The player who changed surfaces.
---@field surface_index uint The surface index the player was on.
---@field tick uint Tick the event was generated.

---@class on_player_cheat_mode_disabled Called when cheat mode is disabled on a player.
---@field name defines_events Identifier of the event
---@field player_index uint The player.
---@field tick uint Tick the event was generated.

---@class on_player_cheat_mode_enabled Called when cheat mode is enabled on a player.
---@field name defines_events Identifier of the event
---@field player_index uint The player.
---@field tick uint Tick the event was generated.

---@class on_player_clicked_gps_tag Called when a player clicks a gps tag
---@field name defines_events Identifier of the event
---@field player_index uint Index of the player
---@field position Position Map position contained in gps tag
---@field surface string Surface name contained in gps tag, even when such surface does not exists
---@field tick uint Tick the event was generated.

---@class on_player_configured_blueprint Called when a player clicks the "confirm" button in the configure Blueprint GUI.
---@field name defines_events Identifier of the event
---@field player_index uint The player.
---@field tick uint Tick the event was generated.

---@class on_player_configured_spider_remote Called when a player configures spidertron remote to be connected with a given spidertron
---@field name defines_events Identifier of the event
---@field player_index uint The player that configured the remote.
---@field tick uint Tick the event was generated.
---@field vehicle LuaEntity Spider vehicle to which remote was connected to.

---@class on_player_crafted_item Called when the player finishes crafting an item. This event fires just before the results are inserted into the player's inventory, not when the crafting is queued (see [on_pre_player_crafted_item](on_pre_player_crafted_item)).
---@field item_stack LuaItemStack The item that has been crafted.
---@field name defines_events Identifier of the event
---@field player_index uint The player doing the crafting.
---@field recipe LuaRecipe The recipe used to craft this item.
---@field tick uint Tick the event was generated.

---@class on_player_created Called after the player was created.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_cursor_stack_changed Called after a players cursorstack changed in some way.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_deconstructed_area Called when a player selects an area with a deconstruction planner.
---@field alt boolean If normal selection or alt selection was used.
---@field area BoundingBox The area selected.
---@field item string The item used to select the area.
---@field name defines_events Identifier of the event
---@field player_index uint The player doing the selection.
---@field surface LuaSurface The surface selected.
---@field tick uint Tick the event was generated.

---@class on_player_demoted Called when a player is demoted.
---@field name defines_events Identifier of the event
---@field player_index uint The player.
---@field tick uint Tick the event was generated.

---@class on_player_died Called after a player dies.
---@field cause LuaEntity
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_display_resolution_changed Called when the display resolution changes for a given player.
---@field name defines_events Identifier of the event
---@field old_resolution DisplayResolution The old display resolution
---@field player_index uint The player
---@field tick uint Tick the event was generated.

---@class on_player_display_scale_changed Called when the display scale changes for a given player.
---@field name defines_events Identifier of the event
---@field old_scale double The old display scale
---@field player_index uint The player
---@field tick uint Tick the event was generated.

---@class on_player_driving_changed_state Called when the player's driving state has changed, this means a player has either entered or left a vehicle.
---@field entity LuaEntity The vehicle if any.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_dropped_item Called when a player drops an item on the ground.
---@field entity LuaEntity The item-on-ground entity.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_fast_transferred Called when a player fast-transfers something to or from an entity.
---@field entity LuaEntity The entity transferred from or to.
---@field from_player boolean Whether the transfer was from player to entity. If `false`, the transfer was from entity to player.
---@field name defines_events Identifier of the event
---@field player_index uint The player transferred from or to.
---@field tick uint Tick the event was generated.

---@class on_player_flushed_fluid Called after player flushed fluid
---@field amount double Amount of fluid that was removed
---@field entity LuaEntity Entity from which flush was performed
---@field fluid string Name of a fluid that was flushed
---@field name defines_events Identifier of the event
---@field only_this_entity boolean True if flush was requested only on this entity
---@field player_index uint Index of the player
---@field tick uint Tick the event was generated.

---@class on_player_gun_inventory_changed Called after a players gun inventory changed in some way.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_joined_game Called after a player joins the game.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_kicked Called when a player is kicked.
---@field by_player uint The player that did the kicking if any.
---@field name defines_events Identifier of the event
---@field player_index uint The player kicked.
---@field reason string The reason given if any.
---@field tick uint Tick the event was generated.

---@class on_player_left_game Called after a player leaves the game.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field reason defines_disconnect_reason
---@field tick uint Tick the event was generated.

---@class on_player_main_inventory_changed Called after a players main inventory changed in some way.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_mined_entity Called after the results of an entity being mined are collected just before the entity is destroyed. After this event any items in the buffer will be transferred into the player as if they came from mining the entity. Can be filtered using [LuaPlayerMinedEntityEventFilter](LuaPlayerMinedEntityEventFilter).
---@field buffer LuaInventory The temporary inventory that holds the result of mining the entity.
---@field entity LuaEntity The entity that has been mined.
---@field name defines_events Identifier of the event
---@field player_index uint The index of the player doing the mining.
---@field tick uint Tick the event was generated.

---@class on_player_mined_item Called when the player mines something.
---@field item_stack SimpleItemStack The item given to the player
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_mined_tile Called after a player mines tiles.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field surface_index uint The surface the tile(s) were mined from.
---@field tick uint Tick the event was generated.
---@field tiles OldTileAndPosition[] The position data.

---@class on_player_muted Called when a player is muted.
---@field name defines_events Identifier of the event
---@field player_index uint The player.
---@field tick uint Tick the event was generated.

---@class on_player_pipette Called when a player invokes the "smart pipette" over an entity.
---@field item LuaItemPrototype The item put in the cursor
---@field name defines_events Identifier of the event
---@field player_index uint The player
---@field tick uint Tick the event was generated.
---@field used_cheat_mode boolean If cheat mode was used to give a free stack of the item.

---@class on_player_placed_equipment Called after the player puts equipment in an equipment grid
---@field equipment LuaEquipment The equipment put in the equipment grid.
---@field grid LuaEquipmentGrid The equipment grid the equipment was put in.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_promoted Called when a player is promoted.
---@field name defines_events Identifier of the event
---@field player_index uint The player.
---@field tick uint Tick the event was generated.

---@class on_player_removed Called when a player is removed (deleted) from the game. Not to be confused with the player logging of this is different in that the player is deleted as if he never existed in the save file.
---@field name defines_events Identifier of the event
---@field player_index uint The player index that was removed
---@field tick uint Tick the event was generated.

---@class on_player_removed_equipment Called after the player removes equipment from an equipment grid
---@field count uint The count of equipment removed.
---@field equipment string The equipment removed.
---@field grid LuaEquipmentGrid The equipment grid removed from.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_repaired_entity Called when a player repairs an entity. Can be filtered using [LuaPlayerRepairedEntityEventFilter](LuaPlayerRepairedEntityEventFilter).
---@field entity LuaEntity
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_respawned Called after a player respawns.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field player_port LuaEntity The player port used to respawn if one was used.
---@field tick uint Tick the event was generated.

---@class on_player_rotated_entity Called when the player rotates an entity. This event is only fired when the entity actually changes its orientation -- pressing the rotate key on an entity that can't be rotated won't fire this event.
---@field entity LuaEntity The rotated entity.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field previous_direction defines_direction The previous direction
---@field tick uint Tick the event was generated.

---@class on_player_selected_area Called after a player selects an area with a selection-tool item.
---@field area BoundingBox The area selected.
---@field entities LuaEntity[] The entities selected.
---@field item string The item used to select the area.
---@field name defines_events Identifier of the event
---@field player_index uint The player doing the selection.
---@field surface LuaSurface The surface selected.
---@field tick uint Tick the event was generated.
---@field tiles LuaTile[] The tiles selected.

---@class on_player_set_quick_bar_slot Called when a player sets a quickbar slot to anything (new value, or set to empty).
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_setup_blueprint Called when a player selects an area with a blueprint.
---@field alt boolean If normal selection or alt selection was used.
---@field area BoundingBox The area selected.
---@field item string The item used to select the area.
---@field mapping lazy_table_uint_luaentity The blueprint entity index to source entity mapping. Note: if any mod changes the blueprint this will be incorrect.
---@field name defines_events Identifier of the event
---@field player_index uint The player doing the selection.
---@field surface LuaSurface The surface selected.
---@field tick uint Tick the event was generated.

---@class on_player_toggled_alt_mode Called when a player toggles alt mode, also known as "show entity info".
---@field alt_mode boolean The new alt mode value. This value is a shortcut for accessing [GameViewSettings::show_entity_info](GameViewSettings::show_entity_info) on the player.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_toggled_map_editor Called when a player toggles the map editor on or off.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_trash_inventory_changed Called after a players trash inventory changed in some way.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_player_unbanned Called when a player is un-banned.
---@field by_player uint The player that did the un-banning if any.
---@field name defines_events Identifier of the event
---@field player_index uint The player un-banned.
---@field player_name string The player name un-banned.
---@field reason string The reason the player was banned if any.
---@field tick uint Tick the event was generated.

---@class on_player_unmuted Called when a player is unmuted.
---@field name defines_events Identifier of the event
---@field player_index uint The player.
---@field tick uint Tick the event was generated.

---@class on_player_used_capsule Called when a player uses a capsule that results in some game action.
---@field item LuaItemPrototype The capsule item used.
---@field name defines_events Identifier of the event
---@field player_index uint The player.
---@field position Position The position the capsule was used.
---@field tick uint Tick the event was generated.

---@class on_player_used_spider_remote Called when a player uses spidertron remote to send a spidertron to a given position
---@field name defines_events Identifier of the event
---@field player_index uint The player that used the remote.
---@field position Position Goal position to which spidertron was sent to.
---@field success boolean If the use was successful. It may fail when spidertron has different driver or when player is on different surface.
---@field tick uint Tick the event was generated.
---@field vehicle LuaEntity Spider vehicle which was requested to move.

---@class on_post_entity_died Called after an entity dies. Can be filtered using [LuaPostEntityDiedEventFilter](LuaPostEntityDiedEventFilter).
---@field corpses LuaEntity[] The corpses created by the entity dying if any.
---@field damage_type LuaDamagePrototype The damage type if any.
---@field force LuaForce The force that did the killing if any.
---@field ghost LuaEntity The ghost created by the entity dying if any.
---@field name defines_events Identifier of the event
---@field position Position Position where the entity died.
---@field prototype LuaEntityPrototype The entity prototype of the entity that died.
---@field surface_index uint The surface the entity was on.
---@field tick uint Tick the event was generated.
---@field unit_number uint The unit number the entity had if any.

---@class on_pre_build Called when players uses an item to build something. Called before [on_built_entity](on_built_entity).
---@field created_by_moving boolean Item was placed while moving.
---@field direction defines_direction The direction the item was facing when placed.
---@field flip_horizontal boolean If building this blueprint was flipped horizontally.
---@field flip_vertical boolean If building this blueprint was flipped vertically.
---@field name defines_events Identifier of the event
---@field player_index uint The player who did the placing.
---@field position Position Where the item was placed.
---@field shift_build boolean Item was placed using shift building.
---@field tick uint Tick the event was generated.

---@class on_pre_chunk_deleted Called before one or more chunks are deleted using [LuaSurface::delete_chunk](LuaSurface::delete_chunk).
---@field name defines_events Identifier of the event
---@field positions ChunkPosition[] The chunks to be deleted.
---@field surface_index uint
---@field tick uint Tick the event was generated.

---@class on_pre_entity_settings_pasted Called before entity copy-paste is done.
---@field destination LuaEntity The destination entity settings will be copied to.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field source LuaEntity The source entity settings will be copied from.
---@field tick uint Tick the event was generated.

---@class on_pre_ghost_deconstructed Called before a ghost entity is destroyed as a result of being marked for deconstruction. Can be filtered using [LuaPreGhostDeconstructedEventFilter](LuaPreGhostDeconstructedEventFilter).
---@field ghost LuaEntity
---@field name defines_events Identifier of the event
---@field player_index uint The player that did the deconstruction if any.
---@field tick uint Tick the event was generated.

---@class on_pre_permission_group_deleted Called directly before a permission group is deleted.
---@field group LuaPermissionGroup The group to be deleted.
---@field name defines_events Identifier of the event
---@field player_index uint The player doing the deletion.
---@field tick uint Tick the event was generated.

---@class on_pre_permission_string_imported Called directly before a permission string is imported.
---@field name defines_events Identifier of the event
---@field player_index uint The player importing the string.
---@field tick uint Tick the event was generated.

---@class on_pre_player_crafted_item Called when a player queues something to be crafted.
---@field items LuaInventory The items removed from the players inventory to do the crafting.
---@field name defines_events Identifier of the event
---@field player_index uint The player doing the crafting.
---@field queued_count uint The number of times the recipe is being queued.
---@field recipe LuaRecipe The recipe being queued.
---@field tick uint Tick the event was generated.

---@class on_pre_player_died Called before a players dies.
---@field cause LuaEntity
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_pre_player_left_game Called before a player leaves the game.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field reason defines_disconnect_reason
---@field tick uint Tick the event was generated.

---@class on_pre_player_mined_item Called when the player finishes mining an entity, before the entity is removed from map. Can be filtered using [LuaPrePlayerMinedEntityEventFilter](LuaPrePlayerMinedEntityEventFilter).
---@field entity LuaEntity The entity being mined
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_pre_player_removed Called before a player is removed (deleted) from the game. Not to be confused with the player logging of this is different in that the player is deleted as if he never existed in the save file.
---@field name defines_events Identifier of the event
---@field player_index uint The player index that will be removed
---@field tick uint Tick the event was generated.

---@class on_pre_player_toggled_map_editor Called before a player toggles the map editor on or off.
---@field name defines_events Identifier of the event
---@field player_index uint
---@field tick uint Tick the event was generated.

---@class on_pre_robot_exploded_cliff Called directly before a robot explodes cliffs.
---@field cliff LuaEntity
---@field item LuaItemPrototype The cliff explosive used.
---@field name defines_events Identifier of the event
---@field robot LuaEntity
---@field tick uint Tick the event was generated.

---@class on_pre_script_inventory_resized Called just before a script inventory is resized.
---@field inventory LuaInventory
---@field mod string The mod that did the resizing. This will be `"core"` if done by console command or scenario script.
---@field name defines_events Identifier of the event
---@field new_size uint The new inventory size.
---@field old_size uint The old inventory size.
---@field player_index uint If done by console command; the player who ran the command.
---@field tick uint Tick the event was generated.

---@class on_pre_surface_cleared Called just before a surface is cleared (all entities removed and all chunks deleted).
---@field name defines_events Identifier of the event
---@field surface_index uint
---@field tick uint Tick the event was generated.

---@class on_pre_surface_deleted Called just before a surface is deleted.
---@field name defines_events Identifier of the event
---@field surface_index uint
---@field tick uint Tick the event was generated.

---@class on_research_finished Called when a research finishes.
---@field by_script boolean If the technology was researched by script.
---@field name defines_events Identifier of the event
---@field research LuaTechnology The researched technology
---@field tick uint Tick the event was generated.

---@class on_research_reversed Called when a research is reversed (unresearched).
---@field by_script boolean If the technology was un-researched by script.
---@field name defines_events Identifier of the event
---@field research LuaTechnology The technology un-researched
---@field tick uint Tick the event was generated.

---@class on_research_started Called when a technology research starts.
---@field last_research LuaTechnology
---@field name defines_events Identifier of the event
---@field research LuaTechnology The technology being researched
---@field tick uint Tick the event was generated.

---@class on_resource_depleted Called when a resource entity reaches 0 or its minimum yield for infinite resources.
---@field entity LuaEntity
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_robot_built_entity Called when a construction robot builds an entity. Can be filtered using [LuaRobotBuiltEntityEventFilter](LuaRobotBuiltEntityEventFilter).
---@field created_entity LuaEntity The entity built.
---@field name defines_events Identifier of the event
---@field robot LuaEntity The robot that did the building.
---@field stack LuaItemStack The item used to do the building.
---@field tags Tags The tags associated with this entity if any.
---@field tick uint Tick the event was generated.

---@class on_robot_built_tile Called after a robot builds tiles.
---@field item LuaItemPrototype The item type used to build the tiles.
---@field name defines_events Identifier of the event
---@field robot LuaEntity The robot.
---@field stack LuaItemStack The stack used to build the tiles (may be empty if all of the items where used to build the tiles).
---@field surface_index uint The surface the tile(s) are build on.
---@field tick uint Tick the event was generated.
---@field tile LuaTilePrototype The tile prototype that was placed.
---@field tiles OldTileAndPosition[] The position data.

---@class on_robot_exploded_cliff Called directly after a robot explodes cliffs.
---@field item LuaItemPrototype The cliff explosive used.
---@field name defines_events Identifier of the event
---@field robot LuaEntity
---@field tick uint Tick the event was generated.

---@class on_robot_mined Called when a robot mines an entity.
---@field item_stack SimpleItemStack The entity the robot just picked up.
---@field name defines_events Identifier of the event
---@field robot LuaEntity The robot that did the mining.
---@field tick uint Tick the event was generated.

---@class on_robot_mined_entity Called after the results of an entity being mined are collected just before the entity is destroyed. After this event any items in the buffer will be transferred into the robot as if they came from mining the entity. Can be filtered using [LuaRobotMinedEntityEventFilter](LuaRobotMinedEntityEventFilter).
---@field buffer LuaInventory The temporary inventory that holds the result of mining the entity.
---@field entity LuaEntity The entity that has been mined.
---@field name defines_events Identifier of the event
---@field robot LuaEntity The robot doing the mining.
---@field tick uint Tick the event was generated.

---@class on_robot_mined_tile Called after a robot mines tiles.
---@field name defines_events Identifier of the event
---@field robot LuaEntity The robot.
---@field surface_index uint The surface the tile(s) were mined on.
---@field tick uint Tick the event was generated.
---@field tiles OldTileAndPosition[] The position data.

---@class on_robot_pre_mined Called before a robot mines an entity. Can be filtered using [LuaPreRobotMinedEntityEventFilter](LuaPreRobotMinedEntityEventFilter).
---@field entity LuaEntity The entity which is about to be mined.
---@field name defines_events Identifier of the event
---@field robot LuaEntity The robot that's about to do the mining.
---@field tick uint Tick the event was generated.

---@class on_rocket_launch_ordered Called when a rocket silo is ordered to be launched.
---@field name defines_events Identifier of the event
---@field player_index uint The player that is riding the rocket, if any.
---@field rocket LuaEntity
---@field rocket_silo LuaEntity
---@field tick uint Tick the event was generated.

---@class on_rocket_launched Called when the rocket is launched.
---@field name defines_events Identifier of the event
---@field player_index uint The player that is riding the rocket, if any.
---@field rocket LuaEntity
---@field rocket_silo LuaEntity
---@field tick uint Tick the event was generated.

---@class on_runtime_mod_setting_changed Called when a runtime mod setting is changed by a player.
---@field name defines_events Identifier of the event
---@field player_index uint If the `setting_type` is `"global"` and it was changed through the mod settings GUI, this is the index of the player that changed the global setting. If the `setting_type` is `"runtime-per-user"` and it changed a current setting of the player, this is the index of the player whose setting was changed. In all other cases, this is `nil`.
---@field setting string The prototype name of the setting that was changed.
---@field setting_type string Either "runtime-per-user" or "runtime-global".
---@field tick uint Tick the event was generated.

---@class on_script_inventory_resized Called just after a script inventory is resized.
---@field inventory LuaInventory
---@field mod string The mod that did the resizing. This will be `"core"` if done by console command or scenario script.
---@field name defines_events Identifier of the event
---@field new_size uint The new inventory size.
---@field old_size uint The old inventory size.
---@field overflow_inventory LuaInventory Any items which didn't fit into the new inventory size.
---@field player_index uint If done by console command; the player who ran the command.
---@field tick uint Tick the event was generated.

---@class on_script_path_request_finished Called when a [LuaSurface::request_path](LuaSurface::request_path) call completes.
---@field id uint Handle to associate the callback with a particular call to [LuaSurface::request_path](LuaSurface::request_path).
---@field name defines_events Identifier of the event
---@field path PathfinderWaypoint[] The actual path that the pathfinder has determined. `nil` if pathfinding failed.
---@field tick uint Tick the event was generated.
---@field try_again_later boolean Indicates that the pathfinder failed because it is too busy, and that you can retry later.

---@class on_script_trigger_effect Called when a script trigger effect is triggered.
---@field effect_id string The effect_id specified in the trigger effect.
---@field name defines_events Identifier of the event
---@field source_entity LuaEntity
---@field source_position Position
---@field surface_index uint The surface the effect happened on.
---@field target_entity LuaEntity
---@field target_position Position
---@field tick uint Tick the event was generated.

---@class on_sector_scanned Called when an entity of type `radar` finishes scanning a sector. Can be filtered for the radar using [LuaSectorScannedEventFilter](LuaSectorScannedEventFilter).
---@field area BoundingBox Area of the scanned chunk.
---@field chunk_position ChunkPosition The chunk scanned.
---@field name defines_events Identifier of the event
---@field radar LuaEntity The radar that did the scanning.
---@field tick uint Tick the event was generated.

---@class on_selected_entity_changed Called after the selected entity changes for a given player.
---@field last_entity LuaEntity The last selected entity if it still exists and there was one.
---@field name defines_events Identifier of the event
---@field player_index uint The player whose selected entity changed.
---@field tick uint Tick the event was generated.

---@class on_spider_command_completed Called when a spider finishes moving to its autopilot position.
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.
---@field vehicle LuaEntity Spider vehicle which was requested to move.

---@class on_string_translated Called when a translation request generated through [LuaPlayer::request_translation](LuaPlayer::request_translation) is translated.
---@field localised_string LocalisedString The localised string being translated.
---@field name defines_events Identifier of the event
---@field player_index uint The player whose locale was used for the translation.
---@field result string The translated `localised_string`.
---@field tick uint Tick the event was generated.
---@field translated boolean Whether the requested localised string was valid and could be translated.

---@class on_surface_cleared Called just after a surface is cleared (all entities removed and all chunks deleted).
---@field name defines_events Identifier of the event
---@field surface_index uint
---@field tick uint Tick the event was generated.

---@class on_surface_created Called when a surface is created.
---@field name defines_events Identifier of the event
---@field surface_index uint
---@field tick uint Tick the event was generated.

---@class on_surface_deleted Called after a surface is deleted.
---@field name defines_events Identifier of the event
---@field surface_index uint
---@field tick uint Tick the event was generated.

---@class on_surface_imported Called after a surface is imported.
---@field name defines_events Identifier of the event
---@field original_name string The original surface name.
---@field surface_index uint
---@field tick uint Tick the event was generated.

---@class on_surface_renamed Called when a surface is renamed.
---@field name defines_events Identifier of the event
---@field new_name string
---@field old_name string
---@field surface_index uint
---@field tick uint Tick the event was generated.

---@class on_technology_effects_reset Called when [LuaForce::reset_technology_effects](LuaForce::reset_technology_effects) is finished.
---@field force LuaForce
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_tick It is fired once every tick. Since this event is fired every tick, its handler shouldn't include performance heavy code.
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_train_changed_state Called when a train changes state (started to stopped and vice versa)
---@field name defines_events Identifier of the event
---@field old_state defines_train_state
---@field tick uint Tick the event was generated.
---@field train LuaTrain

---@class on_train_created Called when a new train is created either through disconnecting/connecting an existing one or building a new one.
---@field name defines_events Identifier of the event
---@field old_train_id_1 uint The first old train id when splitting/merging trains.
---@field old_train_id_2 uint The second old train id when splitting/merging trains.
---@field tick uint Tick the event was generated.
---@field train LuaTrain

---@class on_train_schedule_changed Called when a trains schedule is changed either by the player or through script.
---@field name defines_events Identifier of the event
---@field player_index uint The player who made the change if any.
---@field tick uint Tick the event was generated.
---@field train LuaTrain

---@class on_trigger_created_entity Called when an entity with a trigger prototype (such as capsules) create an entity AND that trigger prototype defined `trigger_created_entity="true"`.
---@field entity LuaEntity
---@field name defines_events Identifier of the event
---@field source LuaEntity
---@field tick uint Tick the event was generated.

---@class on_trigger_fired_artillery Called when an entity with a trigger prototype (such as capsules) fire an artillery projectile AND that trigger prototype defined `trigger_fired_artillery="true"`.
---@field entity LuaEntity
---@field name defines_events Identifier of the event
---@field source LuaEntity
---@field tick uint Tick the event was generated.

---@class on_unit_added_to_group Called when a unit is added to a unit group.
---@field group LuaUnitGroup
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.
---@field unit LuaEntity

---@class on_unit_group_created Called when a new unit group is created, before any members are added to it.
---@field group LuaUnitGroup
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_unit_group_finished_gathering Called when a unit group finishes gathering and starts executing its command.
---@field group LuaUnitGroup
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class on_unit_removed_from_group Called when a unit is removed from a unit group.
---@field group LuaUnitGroup
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.
---@field unit LuaEntity

---@class on_worker_robot_expired Called when a worker (construction or logistic) robot expires through a lack of energy.
---@field name defines_events Identifier of the event
---@field robot LuaEntity
---@field tick uint Tick the event was generated.

---@class script_raised_built A static event mods can use to tell other mods they built something by script. This event is only raised if a mod does so with [LuaBootstrap::raise_event](LuaBootstrap::raise_event) or [LuaBootstrap::raise_script_built](LuaBootstrap::raise_script_built), or when `raise_built` is passed to [LuaSurface::create_entity](LuaSurface::create_entity). Can be filtered using [LuaScriptRaisedBuiltEventFilter](LuaScriptRaisedBuiltEventFilter).
---@field entity LuaEntity The entity that has been built.
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class script_raised_destroy A static event mods can use to tell other mods they destroyed something by script. This event is only raised if a mod does so with [LuaBootstrap::raise_event](LuaBootstrap::raise_event) or [LuaBootstrap::raise_script_destroy](LuaBootstrap::raise_script_destroy), or when `raise_destroy` is passed to [LuaEntity::destroy](LuaEntity::destroy). Can be filtered using [LuaScriptRaisedDestroyEventFilter](LuaScriptRaisedDestroyEventFilter).
---@field entity LuaEntity The entity that was destroyed.
---@field name defines_events Identifier of the event
---@field tick uint Tick the event was generated.

---@class script_raised_revive A static event mods can use to tell other mods they revived something by script. This event is only raised if a mod does so with [LuaBootstrap::raise_event](LuaBootstrap::raise_event) or [LuaBootstrap::raise_script_revive](LuaBootstrap::raise_script_revive), or when `raise_revive` is passed to [LuaEntity::revive](LuaEntity::revive). Can be filtered using [LuaScriptRaisedReviveEventFilter](LuaScriptRaisedReviveEventFilter).
---@field entity LuaEntity The entity that was revived.
---@field name defines_events Identifier of the event
---@field tags Tags The tags associated with this entity, if any.
---@field tick uint Tick the event was generated.

---@class script_raised_set_tiles A static event mods can use to tell other mods they changed tiles on a surface by script. This event is only raised if a mod does so with [LuaBootstrap::raise_event](LuaBootstrap::raise_event) or [LuaBootstrap::raise_script_set_tiles](LuaBootstrap::raise_script_set_tiles), or when `raise_event` is passed to [LuaSurface::set_tiles](LuaSurface::set_tiles).
---@field name defines_events Identifier of the event
---@field surface_index uint The surface whose tiles were changed.
---@field tick uint Tick the event was generated.
---@field tiles Tile[] The tiles that were changed.

